{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "FriendlyNote CRUD",
        "description": "My User Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:8000",
    "basePath": "/",
    "tags": [
        {
            "name": "User",
            "description": "API for users in the system"
        },
        {
            "name": "Note",
            "description": "API for notes in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/note/:enclosureid": {
            "post": {
                "tags": [
                    "Note"
                ],
                "summary": "Create a new note",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "data": true
                        }
                    }
                }
            }
        },
        "/note/:id": {
            "post": {
                "tags": [
                    "Note"
                ],
                "summary": "Create a new note",
                "parameters": [
                    {
                        "name": "enclosureid",
                        "in": "path",
                        "required": true,
                        "description": "ID of the enclosure that the note belongs to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "description": "Note object that needs to be created",
                        "required": true,
                        "in": "body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Test Note"
                                        },
                                        "content": {
                                            "type": "string",
                                            "example": "This is a test note"
                                        }
                                    },
                                    "required": [
                                        "title",
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "title",
                        "description": "Note's title",
                        "required": true,
                        "in": "body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string",
                                            "example": "Test note"
                                        }
                                    },
                                    "required": [
                                        "title"
                                    ]
                                }
                            }
                        }
                    }                   
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/note/enclosure/:enclosureid": {
            "post": {
                "tags": [
                    "Note"
                ],
                "summary": "Create a new note",
                "parameters": [
                    {
                        "in": "path",
                        "name": "enclosureid",
                        "description": "The ID of the enclosure to which the note belongs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "The note object to create",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The title of the note",
                                    "example": "My first note"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The content of the note",
                                    "example": "This is the content of my first note"
                                },
                                "dateCreated": {
                                    "type": "string",
                                    "description": "The date when the note was created",
                                    "example": "2023-02-17T12:34:56Z"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "boolean",
                                    "description": "Whether the note was created successfully",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            }
        },
        

        "/note/update/:id": {
            "put": {
                "tags": [
                    "Note"
                ],
                "summary": "Update a note",
                "parameters": [
                    {
                        "in": "params",
                        "name": "id",
                        "description": "The ID of the note",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "The note object to create",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The title of the note",
                                    "example": "My first note"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The content of the note",
                                    "example": "This is the content of my first note"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "boolean",
                                    "description": "Whether the note was created successfully",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            }
        },
        
        




        "/enclosure/:id": {
            "post": {
                "tags": [
                    "Enclosure"
                ],
                "summary": "Create a new enclosure for a user",
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of the user to create the enclosure for",
                        "required": true,
                        "type": "string",
                        "properties": {
                            "nameOfProperty": {
                                "type": "string",
                                "description": "id of the user"
                            }
                        }
                    },
                    {
                        "in": "body",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/enclosure/user/:userid": {
            "get": {
                "tags": [
                    "Enclosure"
                ],
                "summary": "Get all enclosures owned by a user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "description": "ID of the user to get enclosures for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "page",
                        "description": "The page number to get",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the enclosure"
                                },
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Note"
                                    },
                                    "description": "The notes associated with the enclosure"
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "The ID of the user who created the enclosure"
                                },
                                "dateCreated": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time when the enclosure was created"
                                }
                            }
                        },
                        "required": [
                            "name",
                            "notes",
                            "creator",
                            "dateCreated"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the enclosure"
                                            },
                                            "notes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Note"
                                                },
                                                "description": "The notes associated with the enclosure"
                                            },
                                            "creator": {
                                                "type": "string",
                                                "description": "The ID of the user who created the enclosure"
                                            },
                                            "dateCreated": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The date and time when the enclosure was created"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "notes",
                                            "creator",
                                            "dateCreated"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/enclosure/share": {
            "post": {
                "tags": [
                    "Enclosure"
                ],"summary": "Share an enclosure with a user",
                "parameters": [
                    {
                        "in":"body",
                        "name": "enclosure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the enclosure"
                                },
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Note"
                                    },
                                    "description": "The notes associated with the enclosure"
                                },
                                "creator": {
                                    "type": "string",
                                    "description": "The ID of the user who created the enclosure"
                                },
                                "dateCreated": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time when the enclosure was created"
                                }
                            }
                        },
                        "required": true
                    }
                ],
                
                "description": "Share an existing enclosure with another user by specifying their email and the ID of the enclosure",
                "operationId": "shareEnclosure",
                "responses": {
                    "200": {
                        "description": "Enclosure shared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enclosure shared"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or enclosure not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User or enclosure not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enclosure/search/:id": {
            "get": {
                "tags": [
                    "Enclosure"
                ],
                "summary": "Search for enclosures by name",
                
                "parameters": [
                    {
                        
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the user to search for enclosures for",
                        "required": true,
                        "type": "string"
                        
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "description": "The name of the enclosure to search for",
                        "required": true,
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the enclosure to search for",
                                "example": "My Enclosure"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of enclosures matching the specified name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Enclosure"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified user ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve all users",
                "responses": {
                    "200": {
                        "description": "An array of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "description": "The user to create",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mail": {
                                    "type": "string",
                                    "description": "The email of the user to be created."
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The password of the user to be created."
                                }
                            },
                            "required": [
                                "mail",
                                "password"
                            ]
                        }
                    }
                ],
                "summary": "Create a new user",
                "responses": {
                    "200": {
                        "description": "The newly created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/:id": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "body",
                        "description": "ID of user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The ID of the user to retrieve"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "A message indicating the reason for the error."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "A message indicating the reason for the error."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },


        "/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Make login",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "credentials of the user",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mail": {
                                    "type": "string",
                                    "description": "The mail of the user"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "the password"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Password sbagliata"
                        },
                    "404": {
                        "description": "User not found"
                    },
                    "200": {
                        "description": "Login ok"
                    }
                }
            }
        },
    "components": {
        "schemas": {
            "Note": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "title",
                    "body",
                    "author"
                ]
            },
            "components": {
                "schemas": {
                    "UserLogin": {
                        "type": "object",
                        "properties": {
                            "mail": {
                                "type": "string",
                                "description": "Email of the user to be logged in"
                            },
                            "password": {
                                "type": "string",
                                "description": "Password of the user to be logged in"
                            }
                        },
                        "required": [
                            "mail",
                            "password"
                        ]
                    }
                }
            },
            "Enclosure": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the enclosure"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        },
                        "description": "The notes associated with the enclosure"
                    },
                    "creator": {
                        "type": "string",
                        "description": "The ID of the user who created the enclosure"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the enclosure was created"
                    }
                },
                "required": [
                    "name",
                    "notes",
                    "creator",
                    "dateCreated"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "mail": {
                        "type": "string",
                        "description": "The user's email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's password"
                    },
                    "EnclosurePossesed": {
                        "type": "array",
                        "description": "List of enclosure objects possessed by the user",
                        "items": {
                            "$ref": "#/components/schemas/Enclosure"
                        }
                    }
                },
                "required": [
                    "mail",
                    "password"
                ]
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "mail": {
                        "type": "string",
                        "description": "The user's email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's password"
                    }
                },
                "required": [
                    "mail",
                    "password"
                ]
            }
        }
    }
    }
}